{
    "$schema": "http://json-schema.org/schema",
    "version": 2,
    "title": "Psalm executor",
    "description": "",
    "type": "object",
    "properties": {
        "cmd": {
            "type": "string",
            "description": "The path to the psalm executable.",
            "default": "./vendor/bin/psalm.phar"
        },
        "cwd": {
            "type": "string",
            "description": "The cwd for the psalm process."
        },
        "files": {
            "type": "array",
            "description": "The files to typecheck",
            "items": {
                "type": "string"
            }
        },
        "config": {
            "type": "string",
            "description": "Path to a psalm configuration file."
        },
        "useIniDefaults": {
            "type": "boolean",
            "description": "Use PHP-provided ini defaults for memory and error display.",
            "default": false
        },
        "memoryLimit": {
            "type": "string",
            "description": "Use a specific memory limit. Cannot be combined with useIniDefaults."
        },
        "disableExtensions": {
            "type": "array",
            "description": "Use to disable certain extensions while Psalm is running.",
            "items": {
                "type": "string"
            }
        },
        "threads": {
            "type": "integer",
            "description": "If greater than one, Psalm will run analysis on multiple threats, speeding things up."
        },
        "noDiff": {
            "type": "boolean",
            "description": "Turns off Psalm's diff mode, checks all files regardless of whether they've changed."
        },
        "phpVersion": {
            "type": "string",
            "description": "Explicitly set PHP version to analyse code against."
        },
        "errorLevel": {
            "type": "integer",
            "description": "Set the error reporting level."
        },
        "showInfo": {
            "type": "boolean",
            "description": "Show non-exception parser findings (defaults to false).",
            "default": false
        },
        "showSnippet": {
            "type": "boolean",
            "description": "Show code snippets with errors",
            "default": true
        },
        "findDeadCode": {
            "type": "string",
            "enum": ["auto", "always"],
            "description": "Look for unused code. Options are 'auto' or 'always'. If no value is specified, default is 'auto'."
        },
        "findUnusedCode": {
            "type": "string",
            "enum": ["auto", "always"],
            "description": "Look for unused code. Options are 'auto' or 'always'. If no value is specified, default is 'auto'."
        },
        "findUnusedPsalmSuppress": {
            "type": "boolean",
            "description": "find all @psalm-suppress annotations that aren't used.",
            "default": false
        },
        "findReferencesTo": {
            "type": "string",
            "description": "Searches the codebase for references to the given fully-qualified class or method, where method is in the format class::methodName"
        },
        "noSuggestions": {
            "type": "boolean",
            "description": "Hide suggestions",
            "default": false
        },
        "taintAnalysis": {
            "type": "boolean",
            "description": "Run Psalm in taint analysis mode - see https://psalm.dev/docs/security_analysis for more info",
            "default": false
        },
        "dumpTaintGraph": {
            "type": "string",
            "description": "Output the taint graph using the DOT language – requires taintAnalysis=true."
        },
        "setBaseline": {
            "type": "string",
            "description": "Save all current error level issues to a file, to mark them as info in subsequent runs. Add --include-php-versions to also include a list of PHP extension versions"
        },
        "useBaseline": {
            "type": "string",
            "description": "Allows you to use a baseline other than the default baseline provided in your config"
        },
        "ignoreBaseline": {
            "type": "boolean",
            "description": "Ignore the error baseline",
            "default": false
        },
        "updateBaseline": {
            "type": "boolean",
            "description": "Update the baseline by removing fixed issues. This will not add new issues to the baseline.  Add --include-php-versions to also include a list of PHP extension versions.",
            "default": false
        },
        "plugin": {
            "type": "string",
            "description": "Executes a plugin, an alternative to using the Psalm config"
        },
        "monochrome": {
            "type": "boolean",
            "description": "Enable monochrome output",
            "default": false
        },
        "outputFormat": {
            "type": "string",
            "enum": [
                "compact",
                "console",
                "text",
                "emacs",
                "json",
                "pylint",
                "xml",
                "checkstyle",
                "junit",
                "sonarqube",
                "github",
                "phpstorm",
                "codeclimate",
                "by-issue-level"
            ],
            "description": "Changes the output format."
        },
        "noProgress": {
            "type": "boolean",
            "description": "Disable the progress indicator",
            "default": false
        },
        "longProgress": {
            "type": "boolean",
            "description": "Use a progress indicator suitable for Continuous Integration logs",
            "default": false
        },
        "stats": {
            "type": "boolean",
            "description": "Shows a breakdown of Psalm’s ability to infer types in the codebase",
            "default": false
        },
        "report": {
            "type": "string",
            "description": "The path where to output report file. The output format is based on the file extension. (Currently supported formats: \".json\", \".xml\", \".txt\", \".emacs\", \".pylint\", \".console\", \".sarif\", \"checkstyle.xml\", \"sonarqube.json\", \"codeclimate.json\", \"summary.json\", \"junit.xml\")"
        },
        "reportShowInfo": {
            "type": "boolean",
            "description": "Whether the report should include non-errors in its output.",
            "default": true
        },
        "clearCache": {
            "type": "boolean",
            "description": "Clears all cache files that Psalm uses for this specific project",
            "default": false
        },
        "clearGlobalCache": {
            "type": "boolean",
            "description": "Clears all cache files that Psalm uses for all projects",
            "default": false
        },
        "noCache": {
            "type": "boolean",
            "description": "Runs Psalm without using cache",
            "default": false
        },
        "noReflectionCache": {
            "type": "boolean",
            "description": "Runs Psalm without using cached representations of unchanged classes and files. Useful if you want the afterClassLikeVisit plugin hook to run every time you visit a file.",
            "default": false
        },
        "noFileCache": {
            "type": "boolean",
            "description": "Runs Psalm without using caching every single file for later diffing. This reduces the space Psalm uses on disk and file I/O.",
            "default": false
        },
        "debug": {
            "type": "boolean",
            "description": "Debug information",
            "default": false
        },
        "debugByLine": {
            "type": "boolean",
            "description": "Debug information on a line-by-line level",
            "default": false
        },
        "debugEmittedIssues": {
            "type": "boolean",
            "description": "Print a php backtrace to stderr when emitting issues.",
            "default": false
        },
        "root": {
            "type": "boolean",
            "description": "If running Psalm globally you’ll need to specify a project root. Defaults to cwd",
            "default": false
        },
        "generateJsonMap": {
            "type": "string",
            "description": "Generate a map of node references and types in JSON format, saved to the given path."
        },
        "generateStubs": {
            "type": "string",
            "description": "Generate stubs for the project and dump the file in the given path"
        },
        "shepherd": {
            "type": "string",
            "description": "Send analysis statistics to Shepherd (shepherd.dev) or your server."
        }
    },
    "required": []
}
